@using System.Net;
@using System.Web;
@{
    ViewData["Title"] = "Home Page";
}
@model NewsApp.Models.DTO.NewsListViewModel


@if(!User.Identity.IsAuthenticated)
{
<!-- Please Login -->
<div class="jumbotron jumbotron-fluid comment" id="myDiv" style="background-color: bisque">
    <div class="row">
        <div class="col-11 mt-1">
            <p class="lead">Please login or register to make comments!</p>
        </div>
        <div class="col-1 mt-1">
            <button type="button" class="btn btn-light"
                    onclick="document.getElementById('myDiv').style.display='none'">
                <i class="fa-solid fa-xmark"></i>
            </button>
        </div>
    </div>
</div>
}



<div class="jumbotron jumbotron-fluid flash bg-light" style="background-color: rgba(128, 128, 128, 0.204)">
    <div class="container">
        <h1 class="display-4 text-center">Flash News!</h1>
        @if (Model.NewsList.Any())
        {
            
            var flashNews = Model.NewsList.OrderBy(x => Guid.NewGuid()).First();
            <div onclick="window.location.href='/Home/NewsDetail?newsId=@flashNews.Id'" style="cursor:pointer">
                <h3>@flashNews.Title</h3>
                <p>@Html.Raw(flashNews.Body.Length > 400 ? flashNews.Body.Substring(0, 400) + "..." : flashNews.Body)</p>
            </div>
                <img src="~/Uploads/@flashNews.NewsImage" alt="flash" class="flashImage img-fluid" style="width:455px; height:300px">
            
        }
        <div class="row" style="height: 25px;"></div>
    </div>
</div>


<div class="container mt-4">

    <div class="row">
        @* Retrieved 3 newest objects retrieved by date*@
        <div class="col-lg-6 col-sm-12">
            <div id="carouselExampleCaptions" class="carousel slide">
                <div class="carousel-indicators">
                    <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0"
                            class="active" aria-current="true" aria-label="Slide 1"></button>
                    <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1"
                            aria-label="Slide 2"></button>
                    <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2"
                            aria-label="Slide 3"></button>
                </div>
                <div class="carousel-inner">
                    @{
                        var i = 0;
                        var latestNews = Model.NewsList.OrderByDescending(n => n.Date).Take(3);
                        foreach (var item in latestNews)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img src="~/Uploads/@item.NewsImage" class="d-block rounded" style="width:650px; height:500px" >
                                <div onclick="window.location.href='/Home/NewsDetail?newsId=@item.Id'" class="carousel-caption d-none d-md-block" style="cursor:pointer">
                                        <h5 class="newsInPhoto">@item.Title</h5>
                                    <p class="newsInPhoto">@(item.Body.Length > 40 ? item.Body.Substring(0, 40) + "..." : item.Body)</p>
                                </div>
                            </div>
                            i++;
                        }
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions"
                        data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions"
                        data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>

        </div>

        @*If there is less than 25 news in this div, it will list all, if there are more than 25, 
         it will list the first 25 according to date*@
        <div class="col-lg-6 col-sm-12 overflow-auto headersList" style="height: 435px;">
            <p class="text-center" style="font-weight: 700; font-size: large;">Some Headers For You</p>
            <ul class="list-group list-group-flush overflow-auto">
                @{
                    var newsList = Model.NewsList;
                    if (Model.NewsList.Count() > 25)
                    {
                        newsList = Model.NewsList.OrderByDescending(n => n.Date).Take(25);
                    }
                    foreach (var item in newsList)
                    {
                        
                        <li class="list-group-item" onclick="window.location.href='/Home/NewsDetail?newsId=@item.Id'" style="cursor:pointer">
                            <p style="font-weight: 600;">@item.Title</p> @(item.Body.Length > 70 ? item.Body.Substring(0, 70) + "..." : item.Body)
                        </li>
                    }
                }
            </ul>
         </div>
    </div>
</div>

    



<div class="container mt-4">
    <div class="row">
        @{
            var newsListBottom = Model.NewsList.OrderByDescending(n => n.Date).Take(25);
            foreach (var item in newsListBottom)
            {
                <div class="col-sm-12 col-md-4 col-lg-3 mt-2">
                    <div class="card">
                        <div onclick="window.location.href='/Home/NewsDetail?newsId=@item.Id'" style="cursor:pointer">
                            <img src="~/Uploads/@item.NewsImage" class="card-img-top" style="weight:215px;height:150px">
                            <div class="card-body">
                                <h5 class="card-title">@item.Title</h5>
                                <p class="card-text" style="font-weight:300"> @(item.Body.Length > 30 ? (item.Body).Substring(0, Math.Min(item.Body.Length, 30)) : (item.Body))</p>
                                <small>@item.CategoryNames</small>
                            </div>
                        </div>
                    </div>
                </div>

                
            }
        }
    </div>
</div>



